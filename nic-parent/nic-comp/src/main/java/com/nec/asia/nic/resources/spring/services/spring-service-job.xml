<?xml version="1.0" encoding="UTF-8"?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 
	<bean id="jobScheduleDao"
		class="com.nec.asia.nic.framework.job.scheduler.dataAccess.impl.JobScheduleHibernateImpl"
		parent="abstractDao">
	</bean>
	 -->
	 
	<bean id="_jobScheduleService" class="com.nec.asia.nic.framework.job.scheduler.impl.JobScheduleServiceImpl">
		<property name="jobScheduleDao" ref="jobScheduleDao" />
		<property name="scheduler" ref="quartzScheduler" />
	</bean>
	
	<bean id="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceId">${quartz.scheduler.instanceId}</prop>
				<prop key="org.quartz.scheduler.instanceName">${quartz.scheduler.instanceName.web}</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">${quartz.threadPool.threadCount}</prop>
				<prop key="org.quartz.threadPool.threadPriority">${quartz.threadPool.threadPriority}</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">${quartz.jobStore.misfireThreshold}</prop>
			
				<prop key="org.quartz.jobStore.class">org.springframework.scheduling.quartz.LocalDataSourceJobStore</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.oracle.OracleDelegate</prop>
				<prop key="org.quartz.jobStore.tablePrefix">PPAPP.QRTZ_</prop>
				<prop key="org.quartz.jobStore.isClustered">${quartz.jobStore.isClustered}</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.selectWithLockSQL">SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME = ?</prop>
				<!-- Plugins -->
				<prop key="org.quartz.plugin.shutdownhook.cleanShutdown">true</prop>
				<prop key="org.quartz.plugin.shutdownhook.class">org.quartz.plugins.management.ShutdownHookPlugin</prop>
				<prop key="org.quartz.plugin.triggHistory.class">org.quartz.plugins.history.LoggingTriggerHistoryPlugin</prop>
				<prop key="org.quartz.plugin.triggHistory.triggerFiredMessage">Trigger {1}.{0} fired job {6}.{5} at: {4, date, HH:mm:ss MM/dd/yyyy}</prop>
				<prop key="org.quartz.plugin.triggHistory.triggerCompleteMessage">Trigger {1}.{0} completed firing job {6}.{5} at {4, date, HH:mm:ss MM/dd/yyyy}.</prop>
				
				<prop key="org.quartz.scheduler.classLoadHelper.class">org.quartz.simpl.CascadingClassLoadHelper</prop> 
			</props>
		</property>
		<!-- 
		<property name="jobListeners">
			<list>
				<ref local="org.quartz.JobListener" />
			</list>
		</property>
		<property name="triggerListeners">
			<list>
				<ref local="org.quartz.TriggerListener" />
			</list>
		</property>
		 -->
		<property name="dataSource" ref="${datasource}"/>
		<property name="transactionManager" ref="txManager"/>
		<property name="schedulerName" value="${quartz.scheduler.instanceName.web}"/>
		<property name="autoStartup" value="${quartz.autoStartup}"/>
		<property name="startupDelay" value="${quartz.startupDelay}"/>
		<!--  requires if on JTA -->
		<!-- <property name="nonTransactionalDataSource" ref="${quartz.datasource}"/>  -->
	</bean>
	
	<bean id="org.quartz.JobListener" class="com.nec.asia.nic.framework.job.scheduler.JobScheduleJobListener"/>
	<bean id="org.quartz.TriggerListener" class="com.nec.asia.nic.framework.job.scheduler.JobScheduleTriggerListener"/>

	<bean id="jobScheduleService" parent="abstractService">
		<property name="target">
			<ref bean="_jobScheduleService" />
		</property>
		<property name="proxyInterfaces">
			<list>
				<value>
					com.nec.asia.nic.framework.job.scheduler.JobScheduleService
				</value>
			</list>
		</property>
	</bean>
	
	<!-- for quartzWeb to find the bean for executing the Task -->
	<bean id="transactionTask" class="com.nec.asia.nic.comp.job.TransactionTask" scope="prototype">
		<property name="uploadJobService" ref="uploadJobService" />
		<property name="NTHREDS" value="${nic.job.threadpool}" />
	</bean>

	<bean id="reprocessTask" class="com.nec.asia.nic.comp.job.TransactionReprocessTask" scope="prototype">
		<property name="uploadJobService" ref="uploadJobService" />
		<property name="NTHREDS" value="${nic.job.threadpool}" />
	</bean>
	
	<bean id="syncPassportTask" class="com.nec.asia.nic.comp.job.SyncPassportTask" scope="prototype">
		<property name="queuesJobScheduleService" ref="queuesJobScheduleService" />
		<property name="NTHREDS" value="${nic.job.threadpool}" />
	</bean>
	
	<bean id="ldsProcessTask" class="com.nec.asia.nic.comp.job.LdsProcessTask" scope="prototype">
		<property name="queuesJobScheduleService" ref="queuesJobScheduleService" />
		<property name="NTHREDS" value="${nic.job.threadpool}" />
	</bean>
	
</beans>
