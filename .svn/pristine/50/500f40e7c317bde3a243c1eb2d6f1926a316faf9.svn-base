package com.nec.asia.nic.comp.trans.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.nec.asia.nic.comp.trans.dao.ArchiveCodeDao;
import com.nec.asia.nic.comp.trans.dao.BorderGateDao;
import com.nec.asia.nic.comp.trans.dao.NicUploadJobDao;
import com.nec.asia.nic.comp.trans.dao.PurposeDao;
import com.nec.asia.nic.comp.trans.domain.BorderGate;
import com.nec.asia.nic.comp.trans.domain.EppAirline;
import com.nec.asia.nic.comp.trans.domain.EppArchiveCode;
import com.nec.asia.nic.comp.trans.domain.EppFlight;
import com.nec.asia.nic.comp.trans.domain.EppFreeVisa;
import com.nec.asia.nic.comp.trans.domain.EppPurpose;
import com.nec.asia.nic.comp.trans.domain.NicUploadJob;
import com.nec.asia.nic.comp.trans.dto.PurposeDto;
import com.nec.asia.nic.comp.trans.service.AirlineService;
import com.nec.asia.nic.comp.trans.service.AirportService;
import com.nec.asia.nic.comp.trans.service.ArchiveCodeService;
import com.nec.asia.nic.comp.trans.service.BorderGateService;
import com.nec.asia.nic.comp.trans.service.FlightService;
import com.nec.asia.nic.comp.trans.service.FreeVisaService;
import com.nec.asia.nic.comp.trans.service.NicUploadJobService;
import com.nec.asia.nic.comp.trans.service.PurposeService;
import com.nec.asia.nic.comp.trans.utils.HelperClass;
import com.nec.asia.nic.framework.PaginatedResult;
import com.nec.asia.nic.framework.service.impl.DefaultBusinessServiceImpl;


@Service("purposeService")
public class PurposeServiceImpl extends
		DefaultBusinessServiceImpl<EppPurpose, Long, PurposeDao>
		implements PurposeService {
	@Autowired
	private PurposeDao dao;
	
	@Override
	public EppPurpose findByCode(String code)  throws Exception{
		return dao.findByCode(code);
	}
	
	@Override
	public boolean updatePurpose(EppPurpose obj) throws Exception {
		try {
			if(obj != null){
				if(obj.getId() != null && obj.getId() > 0){
					obj.setLastModifiedDate(new Date());
				}
				this.dao.saveOrUpdate(obj);
				return true;
			}
		} catch (Throwable e) {
			throw new Exception(e.getMessage());
		}
		return false;
	}

	@Override
	public PaginatedResult<PurposeDto> findPaginateByPurpose(String code,
			Integer status, int pageNo, int pageSize) {
		try {
			PaginatedResult<EppPurpose> result = this.dao.findPaginateByPurpose(code, status, pageNo, pageSize);
			if(result != null){
				List<PurposeDto> list = new ArrayList<PurposeDto>();
				int i = (pageNo - 1) * pageSize;
				for(EppPurpose epp : result.getRows()){
					PurposeDto dto = new PurposeDto();
					i++;
					dto.setCreateDate(epp.getCreateDate() != null ? HelperClass.convertDateTimeToString(epp.getCreateDate()) : "");
					dto.setId(epp.getId());
					dto.setNote(epp.getNote());
					dto.setPurposeCode(epp.getPurposeCode());
					dto.setStatus(epp.getStatus() == 1 ? "Hoạt động" : "Khóa");
					dto.setStt(i);
					dto.setTiltle(epp.getTitle());
					list.add(dto);
				}
				PaginatedResult<PurposeDto> pr = new PaginatedResult<PurposeDto>(result.getTotal(), pageNo, list);
				return pr;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
}
